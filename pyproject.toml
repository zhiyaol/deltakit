[build-system]
requires = ["setuptools>=80"]
build-backend = "setuptools.build_meta"

[project]
name = "deltakit"
version = "0.5.1"
description = "Deltakit SDK"
readme = "README.md"
requires-python = ">=3.10"
license = "Apache-2.0"
license-files = ["LICENSE"]

authors = [{ name = "Deltakit Team", email = "deltakit@riverlane.com" }]

classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dependencies = [
    "deltakit_circuit",
    "deltakit_core",
    "deltakit_decode",
    "deltakit_explorer",
]

[project.urls]
Homepage = "https://github.com/Deltakit/deltakit"
"Bug Tracker" = "https://github.com/Deltakit/deltakit/issues"
Changelog = "https://github.com/Deltakit/deltakit/releases"

[project.optional-dependencies]
# any changes here should be duplicated to dev dependency list
# AND feature.pytest.dependencies in pixi.toml
tests = [
    "pytest>=8.4.1,<9",
    "pytest-cov>=6.2.1,<7",
    "pytest-mock>=3.14.1,<4",
    "pytest-asyncio>=1.0.0,<2",
    "pytest-skip-slow>=0.0.5",
    "pytest-testmon>=2.0, <3",
    "pytest-lazy-fixtures>=1.0, <2",
]
# any changes here should be duplicated to dev dependency list
lint = [
    "mypy>=1.17,<2",
    "ruff>=0.12.2,<0.13",
    "typos>=1.34.0,<2",
    "isort>=6.0",
]
# any changes here should be duplicated to dev dependency list
docs = [
    "myst_nb>=1.0,<2.0",
    "sphinxawesome-theme>=5.3.2,<6",
    "sphinx-autodoc-typehints>=3.0.0,<4",
    "sphinx-copybutton>=0.5.2,<0.6",
    "pip-licenses>=5.0",
    "sphinx-design>0.6, <1.0",
    "sphinx-autobuild>=2024.10.3",
    "myst-parser>=4.0, <5",
    "vale>=3.12.0.0",
    "jupytext>=1.17.0,<2",
    "jupyter>=1.1.1,<2",
    "ipykernel >=6.29.5,<7"
]
# any changes here should be duplicated to dev dependency list
build = [
    "build>=1.2.0",
]
# any changes here should be duplicated to dev dependency list
security = [
    "bandit>=1.8.6,<2",
    "ochrona>=2.0.2,<3.0",
    "pip-audit >=2.7.3",
]
dev = [
    # poetry seems to be having trouble with elements of
    # deltakit being "listed as a dependency of itself".
    # this list needs to contain all dependencies in other groups
    # (tests, lint, docs, build, security) + dev
    # "deltakit[tests]",
    "pytest>=8.4.1,<9",
    "pytest-cov>=6.2.1,<7",
    "pytest-mock>=3.14.1,<4",
    "pytest-asyncio>=1.0.0,<2",
    "pytest-skip-slow>=0.0.5",
    "pytest-testmon>=2.0, <3",
    "pytest-lazy-fixtures>=1.0, <2",
    # "deltakit[lint]",
    "mypy>=1.17,<2",
    "ruff>=0.12.2,<0.13",
    "typos>=1.34.0,<2",
    "isort>=6.0",
    # "deltakit[docs]",
    "myst_nb>=1.0,<2.0",
    "sphinxawesome-theme>=5.3.2,<6",
    "sphinx-autodoc-typehints>=3.0.0,<4",
    "sphinx-copybutton>=0.5.2,<0.6",
    "pip-licenses>=5.0",
    "sphinx-design>0.6, <1.0",
    "sphinx-autobuild>=2024.10.3",
    "myst-parser>=4.0, <5",
    "vale>=3.12.0.0",
    "jupytext>=1.17.0,<2",
    "jupyter>=1.1.1,<2",
    # "deltakit[build]",
    "build>=1.2.0",
    # "deltakit[security]",
    "bandit>=1.8.6,<2",
    "ochrona>=2.0.2,<3.0",
    "pip-audit >=2.7.3",
    # other
    "pre-commit>=4.2.0,<5",
    "ipykernel>=6.29.5,<7",
    "validate-pyproject>=0.24.1",
    "python-semantic-release>=10.2.0",
    "tomlkit>=0.13,<1",
    "deptry>=0.23, <1",
    "ipykernel >=6.29.5,<7"
]

# for mypy configuration, see `mypy.ini`.
# for ruff configuration, see `ruff.toml`

[tool.pytest.ini_options]
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
  "ignore::DeprecationWarning",  # TODO: deal with these
]

[tool.isort]
skip = [".pixi", ".tox", ".venv"]

[tool.bandit]
exclude_dirs = ['.github', '.pixi', '.tox', '.venv', './tools/vale.py']
skips = ['B101', 'B311']  # B101 is just use of `assert`; 'B311' is use of random module

[tool.typos.default.extend-words]
# Don't correct "iy" - often used in the context of "probability of an IY operation"
iy = "iy"
anc = "anc"
BA = "BA"
youre = "you're"
distribtuion = "distribution"
interm = "interm"
ket = "ket"
Alise = "Alise"

[tool.typos.files]
# Paths/patterns to exclude from spell checking
extend-exclude = ["docs/styles"]

[tool.coverage.run]
omit = [
  ".pixi/*",
]

[tool.deptry]
ignore = ["DEP003"]

[tool.deptry.per_rule_ignores]
DEP001 = ["tests"]
DEP002 = ['deltakit', 'deltakit_explorer', 'deltakit_circuit', 'deltakit_core', 'deltakit_decode',
          'pytest-cov', 'pytest-asyncio', 'pytest-skip-slow', 'pytest-testmon',
          'mypy', 'ruff', 'isort',
          'myst_nb', 'sphinxawesome-theme', 'sphinx-autodoc-typehints', 'sphinx-design',
          'sphinx-copybutton', 'sphinx-autobuild', 'myst-parser', 'jupytext', 'jupyter',
          'pip-licenses', 'build', 'bandit', 'ochrona', 'pip-audit', 'ipykernel',
          'validate-pyproject', 'typos', 'vale',
          'python-semantic-release', 'pre-commit', 'deptry']

[tool.semantic_release]
allow_zero_version = true
version_toml = ["pyproject.toml:project.version"]

[tool.semantic_release.branches.main]
match = "*"

[tool.semantic_release.branches.other]
match = ".*"

[tool.semantic_release.changelog]
exclude_commit_patterns = [
    '''task(?:\([^)]*?\))?: .+''',
    '''chore(?:\([^)]*?\))?: .+''',
    '''ci(?:\([^)]*?\))?: .+''',
    '''refactor(?:\([^)]*?\))?: .+''',
    '''style(?:\([^)]*?\))?: .+''',
    '''tests?(?:\([^)]*?\))?: .+''',
    '''build\((?!deps\): .+)''',
    '''release(?:\([^)]*?\))?: .+''',
    '''dev(?:\([^)]*?\))?: .+''',
    '''Initial [Cc]ommit.*''',
]
mode = "update"

[tool.semantic_release.commit_parser_options]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "tests", "release", "dev"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "tests", "release", "dev"]
